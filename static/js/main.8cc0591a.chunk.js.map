{"version":3,"sources":["Images/logo.png","../node_modules/encoding/lib sync","Main/UserFunctions.js","Main/MainContent.js","Components/Section/MusicPlayer/MusicPlayer.js","Components/Section/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","keys","resolve","id","localhost","login","userLogin","axios","post","userName","password","then","response","undefined","data","token","error","localStorage","setItem","catch","err","setFavouriteByUser","userFavourite","albumIds","albumId","removeFavouriteByUser","userRemoveFavour","getFavouriteTracksByUser","userDet","get","params","getProfileDetails","setProfileDetails","updatedUserDetails","username","getItem","changedusername","profile_img","profile_image","changedPassword","res","clear","getAllTracksByAlbumId","val","body","register","user","firstName","lastName","email","MainContent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleActive","setState","isLogin","userRegister","preventDefault","state","preview_img","image2base64","toast","position","POSITION","TOP_RIGHT","status","success","updateValue","defineProperty","target","name","value","onFilesChange","files","console","log","length","preview","url","notifyError","userDetails","isUserActive","_this2","activeLogStyle","background","color","registerLogStyle","react_default","a","createElement","className","onClick","style","onSubmit","htmlFor","type","placeholder","onChange","autoComplete","required","src","alt","dist_default","onError","onFilesError","accepts","multiple","maxFiles","maxFileSize","minFileSize","clickable","Component","MusicPlayer","songControls","option","song","songSrc","play","volume","isPlaying","pause","setVolume","vol","setFav","fav","isFavourite","timeUpdate","setInterval","currentTime","totalTime","addPlayListToPlayer","artist","cover","musicSrc","obj","singer","setPlayList","setSongsList","isMuted","Audio","songData","track_url","track_image_file","track_title","album_title","bind","artist_name","aria-hidden","data-toggle","href","connect","musicPlayListReducer","dispatch","setCurrent","payload","playList","b64toBlob","require","Home","Section_Album","Section_Favourite","Album","createAlbumActive","isAlbumCreate","createAlbum","albumObj","albumCopy","albumData","slice","count","i","title","albumName","albumImg","description","albumDesc","songs","push","setAlbumTitle","index","albumTitle","currentCard","loaderdata","cardStyle","transform","width","isDataAlive","isDataLoaded","createShown","display","mainPageShown","Section_CreateAlbum","react_router_dom","to","Section_Card","map","key","CreateAlbum","updateAlbumDetails","Card","_this3","getTracks","album_id","dataset","tracksData","isSongsShown","setFavour","copyOfFavouriteAlbum","userFavouriteTracks","setFavouriteFirst","removeFavour","albumsData","favouriteCount","tracksBoolval","boolval","albumOfUser","userfavouriteAlbumArr","newUserFavouriteAlbum","newObj","assign","countBool","forEach","valRes","slicedVal","splice","unshift","_this4","albumcardStyle","flexWrap","window","location","includes","Section_Songs","album_image_file","album_tracks","Songs","_this5","componentDidMount","songsData","Section_MusicPlayer_MusicPlayer","AllCards","Favourite","_this6","userFavouriteList","userFavouriteTrackList","userAlbumList","favouriteTrackUser","Promise","all","trackUserArr","userfavouriteTrackArr","userfavouriteTrackCopy","val1","Profile","_this7","b64Data","blob","blobUrl","URL","createObjectURL","_this7$setState","togglePassword","isPasswordChange","changeUserDetails","updatedDetails","currentPassword","changeProfileImage","file","fileObj","objectSpread","preview_image","isChanged","disabled","Section","_this8","logout","loginUser","activeLink","setSearchWord","searchExist","searchKeyWord","searchErrorText","audioLists","searchKey","keyCode","searchAlbum","data-target","onKeyDown","searchOnEnter","react_router","exact","from","path","render","Section_Home","Section_AllCards","Section_Profile","App","configure","autoClose","alertToSignIn","autoPlay","react_toastify","logo","Components_Section_Section","src_Main_MainContent","isSongs","songsList","lib_default","panelTitle","defaultPosition","top","left","draggable","bounds","Boolean","hostname","match","store","createStore","combineReducers","arguments","currentPlaying","lastPlayed","defaultPlayIndex","playIndex","action","concat","toConsumableArray","applyMiddleware","next","subscribe","getState","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cc0591a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.806430aa.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 323;","import axios from 'axios'\nconst localhost = \"https://musichuntpro.herokuapp.com\";\n//\n// const MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://codingmart42:<password>@musichunt01-4ybzp.mongodb.net/test?retryWrites=true&w=majority\";\n// const client = new MongoClient(uri, { useNewUrlParser: true });\n// client.connect(err => {\n//   const collection = client.db(\"test\").collection(\"devices\");\n//   // perform actions on the collection object\n//   client.close();\n// });\n\n\nexport const login = (userLogin) => {\n  return axios.post(localhost+'/users/login',{\n      userName : userLogin.userName,\n      password : userLogin.password\n  }).then(response => {\n      if(response.data.token!==undefined){\n        if(response.data.error===undefined){\n            localStorage.setItem(\"musicHunt\", response.data.token);\n        }\n      }\n      return response.data\n  }).catch(err=>{\n      return err\n  })\n}\n\n\nexport const setFavouriteByUser = (userFavourite) => {\n  return axios.post(localhost+'/tracks/setFavouriteByUser',{\n      userName : userFavourite.userName,\n      albumIds : userFavourite.albumId\n  }).then(response => {\n      if(response.data!==undefined){\n        if(response.data.error===undefined){\n            return response;\n        }\n      }\n      return response.data\n  }).catch(err=>{\n      return err\n  })\n}\n\nexport const removeFavouriteByUser = (userRemoveFavour) => {\n  return axios.post(localhost + '/tracks/removeFavouriteByUser',{\n    userName : userRemoveFavour.userName,\n    albumId : userRemoveFavour.albumId\n  }).then(response => {\n    return response;\n  })\n}\n\n\nexport const albumsList = ()=>{\n  return axios.get(localhost+'/albums/getAllAlbums').then(response=>{\n      if(response.data===undefined || response.data===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.slice(1,10);\n      }\n  })\n}\n\n\nexport const getFavouriteTracksByUser = (userDet) => {\n  return axios.get(localhost + '/tracks/getFavouriteByUser', {\n    params : {\n      userName : userDet.userName\n    }\n  }).then(response => {\n      return response.data;\n  })\n}\n\nexport const getProfileDetails = (userDet) => {\n  return axios.get(localhost+'/users/profile', {\n    params : {\n      userName : userDet\n    }\n  }).then(response => {\n    return response.data\n  })\n}\n\n\nexport const setProfileDetails = (updatedUserDetails) => {\n  return axios.post(localhost+ '/users/setProfileDetails',{\n    username : localStorage.getItem(\"musicHuntUser\")!==undefined?localStorage.getItem(\"musicHuntUser\"):\"\",\n    changedusername : updatedUserDetails.userName,\n    profile_img : updatedUserDetails.profile_image,\n    changedPassword : updatedUserDetails.changedPassword\n  }).then(res => {\n    localStorage.clear();\n    localStorage.setItem(\"musicHuntUser\", res.data.userName);\n    localStorage.setItem(\"musicHuntUserProfile\", res.data.profile_img);\n    return res;\n  })\n}\n\n\nexport const getAllTracksByAlbumId = (val)=> {\n  return axios.get(localhost + '/getAllTracksByAlbumId',{\n    params: {\n      albumId : val\n    }\n  }).then(response => {\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\nexport const register = (user) => {\n  return axios.post(localhost+'/users/register', {\n    firstName : user.firstName,\n    lastName : user.lastName,\n    userName  : user.userName,\n    email : user.email,\n    password : user.password,\n    profile_img : user.profile_img\n  }).then((response)=>{\n     return response\n  })\n}\n\n\nexport const getFavouriteByTrackId = (trackId) => {\n  return axios.get(localhost +'/getFavouriteByTrackId', {\n    params : {\n      trackId : trackId\n    }\n  }).then(response => {\n      if(response.data.body===undefined || response.data.body===null){\n        return \"Server Down\"\n      }\n      else{\n        return response.data.body;\n      }\n  })\n}\n\n\nexport const searchAlbumByTitle = (searchKey)=>{\n  return axios.get(localhost +'/albums/search', {\n    params :{\n      searchKey : searchKey\n    }\n  }).then(response=>{\n      if(response.data.length>0 && response.data!==undefined){\n          return response.data;\n      }\n      else{\n        return \"No Albums Found\";\n      }\n  })\n}\n\n//\n// export const albums = ()=> {\n//   return axios.get(\"https://musichunt-699ba.firebaseio.com/albums.json\").then((response)=>{\n//       return response;\n//   })\n// }\n//\n// export const putAlbums = (data)=> {\n//   return axios.put(\"https://musichunt-699ba.firebaseio.com/albums.json\",data).then((response)=>{\n//       return response;\n//   })\n// }\n\n// export const getTracks = ()=> {\n//   return axios.get(\"http://localhost:5000/allTracks\").then((response)=>{\n//     return response.data.name.body.dataset;\n//   })\n// }\n","import React , { Component } from 'react';\nimport './MainContent.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { login } from './UserFunctions'\nimport {register} from './UserFunctions';\nimport { toast } from 'react-toastify';\nimport Files from 'react-files';\n// import $ from 'jquery';\nimport image2base64 from 'image-to-base64';\n\nclass MainContent extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      isLogin : true,\n      firstName : \"\",\n      lastName : \"\",\n      userName : \"\",\n      password : \"\",\n      email : \"\",\n      profile_img : \"\",\n      preview_img : \"\",\n      error : \"\"\n    }\n  }\n\n  toggleActive = (val)=> {\n    if(val === \"login\"){\n      this.setState({isLogin : true});\n    }\n    else{\n      this.setState({isLogin : false});\n    }\n  }\n\n\n\n\n  userRegister = (e)=> {\n      e.preventDefault();\n      if(this.state.preview_img!==\"\"){\n          image2base64(this.state.preview_img).then(response => {\n            const user = {\n              firstName : this.state.firstName,\n              lastName : this.state.lastName,\n              userName : this.state.userName,\n              email : this.state.email,\n              password : this.state.password,\n              profile_img : response\n            }\n            register(user).then((res)=> {\n              if(res.data.error!==undefined){\n                toast.error(\"Username Already Exists\", {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n              }\n              if(res.data.status!==undefined){\n                  toast.success(\"Registered Successfully Login To Continue\", {\n                      position: toast.POSITION.TOP_RIGHT\n                  });\n                  this.setState({isLogin : true});\n              }\n            })\n          })\n        }\n        else{\n            this.setState({error : \"Please Upload Image\"});\n        }\n  }\n\n  updateValue = (e)=> {\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  onFilesChange =  (files) => {\n     console.log(files[files.length-1]) ;\n     this.setState({preview_img : files[files.length-1].preview.url});\n  }\n\n  userLogin = (e)=>{\n    e.preventDefault();\n\n    const userDet = {\n      userName : this.state.userName,\n      password : this.state.password\n    }\n\n    login(userDet).then(res => {\n      if(res===undefined){\n        this.notifyError();\n      }\n      else if(res.error!==undefined){\n        toast.error(res.error, {\n            position: toast.POSITION.TOP_RIGHT\n        });\n      }\n      else{\n        console.log(res.userDetails);\n        localStorage.setItem(\"musicHuntUser\", res.userDetails.userName);\n        localStorage.setItem(\"musicHuntUserProfile\", res.userDetails.profile_img);\n        this.setState({isUserActive : true});\n      }\n    })\n\n  }\n\n  notifyError = ()=> {\n    toast.error(\"Invalid Login\", {\n        position: toast.POSITION.TOP_RIGHT\n    });\n  }\n  render(){\n      let activeLogStyle = {\n        background : this.state.isLogin ? \"#777\" : \"\",\n        color : this.state.isLogin ? \"white\" : \"black\"\n      }\n      let registerLogStyle = {\n        background : this.state.isLogin? \"\" : \"#777\",\n        color : this.state.isLogin ? \"black\" : \"white\"\n      }\n        return(\n          <div className=\"app-main\">\n          <div className=\"modal\" id=\"myModal\">\n              <div className=\"modal-dialog modal-dialog-centered\">\n                  <div className=\"modal-content\">\n                      <div className=\"modal-body\">\n                      <div className=\"container-fluid\">\n                        <div className=\"mx-auto\">\n                              <div className=\"row\">\n                                   <div className=\"col-md-12\">\n                                     <div className=\"row text-center log-reg-btn\">\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('login')}} style={activeLogStyle}>\n                                           Login\n                                         </div>\n                                         <div className=\"col\" onClick={()=>{this.toggleActive('register')}} style={registerLogStyle}>\n                                           SignUp\n                                         </div>\n                                     </div>\n                                     <hr/>\n                                   </div>\n                                   {this.state.isLogin ?\n                                     <div className=\"login-main mx-auto\">\n                                       <form onSubmit={this.userLogin}>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" autoComplete=\"current-username\" required />\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" autoComplete=\"new-password\" required />\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">LOGIN</button>\n                                             </div>\n                                       </form>\n                                     </div>:\n                                     <div className=\"signup-main mx-auto\">\n                                       <form onSubmit={this.userRegister}>\n                                              <div className=\"form-group row\">\n                                              {this.state.preview_img !== \"\" ?\n                                                <img src={this.state.preview_img} className=\"preview-img rounded-circle mx-auto\" alt=\"upload_image\"/>:\"\"\n                                              }\n                                              </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"fname\">First Name</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"fname\" placeholder=\"Enter FirstName\" onChange={this.updateValue} name=\"firstName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"lname\">LastName</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"lname\" placeholder=\"Enter LastName\" onChange={this.updateValue} name=\"lastName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"uname\">Username</label>\n                                                 <input type=\"text\" className=\"form-control ml-auto\" id=\"uname\" placeholder=\"Enter username\" onChange={this.updateValue} name=\"userName\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"email\">Email</label>\n                                                 <input type=\"email\" className=\"form-control ml-auto\" id=\"email\" placeholder=\"Enter Email\" onChange={this.updateValue} name=\"email\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"pwd\">Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"pwd\" placeholder=\"Enter password\" onChange={this.updateValue} name=\"password\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                                 <label htmlFor=\"rpwd\">Confirm Password</label>\n                                                 <input type=\"password\" className=\"form-control ml-auto\" id=\"rpwd\" placeholder=\"Re enter password\" name=\"pswd\" required/>\n                                             </div>\n                                             <div className=\"form-group form-inline\">\n                                             <Files\n                                                  className='files-dropzone btn btn-primary'\n                                                  onChange={this.onFilesChange}\n                                                  onError={this.onFilesError}\n                                                  accepts={['image/*']}\n                                                  multiple\n                                                  maxFiles={3}\n                                                  maxFileSize={10000000}\n                                                  minFileSize={0}\n                                                  clickable\n                                              >\n                                                  Upload Photo\n                                              </Files>\n                                              <div>{this.state.error}</div>\n                                             </div>\n                                             <div className=\"form-group form-check form-inline\">\n                                                 <label className=\"form-check-label\">\n                                                   <input className=\"form-check-input\" type=\"checkbox\" name=\"remember\"/> Lazy to remember password\n                                                 </label>\n                                             </div>\n                                             <div className=\"form-group text-center\">\n                                               <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                                             </div>\n                                       </form>\n                                     </div>\n                                   }\n                              </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n          </div>\n        )\n  }\n}\n\nexport default MainContent;\n","import React , {Component} from 'react';\nimport { connect } from 'react-redux';\nclass MusicPlayer extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isPlaying : true,\n      currentTime : \"00:00\",\n      totalTime : \"00:00\",\n      isMuted : false,\n      isFavourite : false,\n      volume : \"1\",\n      songSrc : new Audio(this.props.songData.track_url+\"/download\")\n    }\n  }\n  songControls = (option)=> {\n    console.log(\"playing\");\n    let song = this.state.songSrc;\n    switch(option){\n        case \"play\" :\n          song.play();\n          song.volume = this.state.volume;\n          this.setState({isPlaying : false});\n          break;\n        case \"pause\":\n          song.pause();\n          this.setState({isPlaying : true});\n          break;\n        case \"fav\":\n          break;\n        case \"unfav\":\n        default :\n    }\n  }\n\n  setVolume = (vol)=> {\n      let song = this.state.songSrc;\n      song.volume = vol;\n      this.setState({volume : vol});\n  }\n  setFav = (fav)=> {\n      if(fav===\"fav\"){\n        this.setState({isFavourite : true});\n      }\n      else{\n          this.setState({isFavourite : false});\n      }\n  }\n  timeUpdate = ()=>{\n      setInterval(()=>{\n          if(this.currentTime < this.totalTime){\n            this.setState({currentTime : this.state.currentTime+1});\n          }\n      },1000)\n  }\n  addPlayListToPlayer = (name, artist, cover, musicSrc) =>{\n      let obj = {\n        name : name,\n        singer : artist,\n        cover : cover,\n        musicSrc :  musicSrc+\"/download\"\n      }\n      this.props.setPlayList(obj);\n  }\n  play = (name, artist, cover, musicSrc) => {\n    let obj = {\n      name : name,\n      singer : artist,\n      cover : cover,\n      musicSrc :  musicSrc+\"/download\"\n    }\n    this.props.setSongsList(obj);\n  }\n  render(){\n    return(\n      <div className=\"row music-player\">\n        <div className=\"col\"><img className=\"music-img\" src={this.props.songData.track_image_file} alt=\"img\"/></div>\n        <div className=\"col\">{this.props.songData.track_title}</div>\n        <div className=\"col\">{this.props.songData.album_title}</div>\n        <div className=\"col\" onClick={this.play.bind(this,this.props.songData.track_title,\n                                                   this.props.songData.artist_name,\n                                                   this.props.songData.track_image_file,\n                                                   this.props.songData.track_url)}><i className=\"fa fa-play\" aria-hidden=\"true\"></i></div>\n          {/*this.state.isPlaying ?\n            <div className=\"col\" onClick={this.songControls.bind(this,\"play\")}>\n              <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\n            </div>:\n            <div className=\"col\" onClick={this.songControls.bind(this,\"pause\")}>\n              <i className=\"fa fa-pause\" aria-hidden=\"true\"></i>\n            </div>\n           */}\n        {/*}<div className=\"col\">{this.state.currentTime}/{this.props.songData.track_duration}</div>*/}\n        {/*\n          this.state.volume === \"0\"?\n              <div className=\"col\" onClick={this.setVolume.bind(this,\"0.2\")}>\n                <span>\n                  <i className=\"fa fa-volume-off\"></i>\n                  <i className=\"fa fa-ban\"></i>\n                </span>\n              </div>:\n                this.state.volume === \"0.2\" ?\n                    <div className=\"col\" onClick={this.setVolume.bind(this,\"0.6\")}><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i></div>:\n                      this.state.volume === \"0.6\"?\n                            <div className=\"col\" onClick={this.setVolume.bind(this,\"1\")}><i className=\"fa fa-volume-down\" aria-hidden=\"true\"></i></div>:\n                                <div className=\"col\" onClick={this.setVolume.bind(this,\"0\")}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></div>\n            */}\n        {/*this.state.isFavourite ?\n          <div className=\"col\" onClick={this.setFav.bind(this,\"unfav\")}><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></div>:\n          <div className=\"col\" onClick={this.setFav.bind(this,\"fav\")}><i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i></div>*/}\n          <div className=\"col\">\n              <div className=\"dropdown\">\n                  <div data-toggle=\"dropdown\">\n                    <i className=\"fa fa-ellipsis-v\"></i>\n                  </div>\n                  <div className=\"dropdown-menu\">\n                    <a className=\"dropdown-item\" href=\"/\" onClick={this.addPlayListToPlayer.bind(this,this.props.songData.track_title,\n                                                               this.props.songData.artist_name,\n                                                               this.props.songData.track_image_file,\n                                                               this.props.songData.track_url)}>\n                        Add To PlayList\n                    </a>\n                    <a className=\"dropdown-item\" href=\"/\">Download </a>\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    },\n    setSongsList : (song) => {\n      dispatch({\n        type : 'SET_SONGSLIST',\n        payload : song\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MusicPlayer);\n","import React , {Component} from 'react';\nimport './Section.css';\nimport $ from 'jquery';\nimport { albumsList } from '../../Main/UserFunctions';\nimport { getAllTracksByAlbumId } from '../../Main/UserFunctions';\n// import { getFavouriteByTrackId }  from '../../Main/UserFunctions';\nimport { getFavouriteTracksByUser } from '../../Main/UserFunctions';\nimport { searchAlbumByTitle } from '../../Main/UserFunctions';\nimport { setFavouriteByUser } from '../../Main/UserFunctions';\nimport { removeFavouriteByUser } from '../../Main/UserFunctions';\nimport { getProfileDetails } from '../../Main/UserFunctions';\nimport { setProfileDetails } from '../../Main/UserFunctions';\n// import { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport image2base64 from 'image-to-base64';\nimport Files from 'react-files'\nimport MusicPlayer from './MusicPlayer/MusicPlayer'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Link,\n    Redirect\n  } from 'react-router-dom';\n// var elasticsearch = require('elasticsearch');\nconst b64toBlob = require('b64-to-blob');\n// var client = new elasticsearch.Client({\n//   host: 'localhost:5000',\n//   log: 'trace'\n// });\nclass Home extends Component{\n    render(){\n        return(\n            <div className=\"home\">\n                <Album/>\n                <Favourite/>\n            </div>\n        )\n    }\n}\n\nclass Album extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          currentCard: 0,\n          position: 0,\n          loaderdata : [\"\",\"\",\"\",\"\"],\n          cardStyle: {\n            transform: 'translateX(0px)'\n          },\n          width: 0,\n          albumData : [],\n          isAlbumCreate : false,\n          isDataAlive : false,\n          albumTitle  : \"Albums\",\n          isDataLoaded : false\n        };\n      }\n      async componentDidMount() {\n        if(this.props.albumData!==undefined){\n           this.setState({albumData : this.props.albumData, isDataAlive : true, isDataLoaded : true});\n        }\n        else{\n          let response =await albumsList();\n          if(response===undefined){\n            console.log(\"server unavailable\");\n          }\n          else{\n            this.setState({albumData : response, isDataAlive : true, isDataLoaded : true});\n          }\n        }\n      }\n\n      createAlbumActive = ()=>{\n          this.setState({isAlbumCreate : true});\n      }\n\n      createAlbum = (albumObj)=> {\n        let albumCopy = this.state.albumData.slice();\n        let count = 0;\n        for(let i=0; i<albumCopy.length; i++){\n            if(albumCopy[i].title === albumObj.albumName){\n              count++;\n            }\n        }\n        if(count)\n        var obj = {\n          albumImg : \"\",\n          description : albumObj.albumDesc,\n          songs : [],\n          title : albumObj.albumName\n        }\n        albumCopy.push(obj);\n        this.setState({albumData : albumCopy, isAlbumCreate : false});\n      }\n      setAlbumTitle = (index) => {\n          this.setState({albumTitle : this.state.albumData[index].album_title});\n      }\n\n    render(){\n        let createShown = {\n          display : this.props.albumTitle ===\"Albums\"?\"block\":\"none\"\n        }\n        let mainPageShown = {\n          display : this.state.isDataAlive ? \"block\" : \"none\"\n        }\n        if(!this.state.isAlbumCreate){\n            return(\n              <div>\n              {this.state.isDataLoaded ?\n                  <div className=\"album container-fluid\" style={mainPageShown}>\n                      <div className=\"cards-slider row\">\n                          <div className=\"col-md-9\"><h3><Link to=\"/MusicHuntR/album\">{this.props.title!==undefined?this.props.title : \"Album\"}</Link>{this.state.albumTitle!==\"Albums\"?<span>&nbsp;&#x3e;&nbsp;{this.state.albumTitle}</span>:\"\"}</h3></div>\n                            <div className=\"btn btn-success create-albm-btn\" style={createShown} onClick={this.createAlbumActive}>Create Album</div>\n                      </div>\n                      <hr className=\"album-hr\"/>\n                      <div className=\"album-content\">\n                          <Card cardStyle={this.state.cardStyle} albumData={this.state.albumData} albumTitle={this.setAlbumTitle}/>\n                      </div>\n                  </div>:\n                  <div className=\"container-fluid\">\n                    <div className=\"loader-box row\">\n                      {this.state.loaderdata.map((val, index)=>{\n                          return(\n                            <div className=\"col\" key={index}>\n                              <div className=\"loader-card\">\n                                <div className=\"loader-img mx-auto\"></div>\n                                <div className=\"loader-title mx-auto\"></div>\n                                <div className=\"loader-title mx-auto\"></div>\n                                <div className=\"loader-fav ml-auto\"></div>\n                              </div>\n                            </div>\n                          )\n                      })}\n                    </div>\n                  </div>\n              }\n              </div>\n            )\n          }\n          else{\n            return <CreateAlbum createAlbum={this.createAlbum}/>\n          }\n    }\n}\n\nclass CreateAlbum extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      albumName : \"\",\n      albumDesc : \"\",\n      albumImg : \"\",\n      songs : []\n    }\n  }\n\n  updateAlbumDetails = (e)=>{\n    this.setState({[e.target.name] : e.target.value});\n  }\n\n  render(){\n    return(\n      <div className=\"create-album-main container\">\n      <h2>Create Your Album </h2>\n      <hr/>\n        <div className=\"row\">\n              <div className=\"col\">\n                <form>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <label htmlFor=\"abmName\">Name</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumName\" autoComplete=\"current-username\" required />\n                        </div>\n                        <div className=\"col ml-auto\">\n                            <label htmlFor=\"abmDesc\">Description</label>\n                            <input type=\"text\" className=\"form-control ml-auto\" id=\"abmName\" placeholder=\"Enter Album Name\" onChange={this.updateAlbumDetails} name=\"albumDesc\" autoComplete=\"current-username\" required />\n                        </div>\n                    </div>\n                    <div className=\"form-group text-center create-abm-upload\">\n                        <Files\n                            className='files-dropzone album-img-upload btn btn-primary btn-sm'\n                            // onChange={this.onFilesChange}\n                            // onError={this.onFilesError}\n                            accepts={['image/*']}\n                            multiple\n                            maxFiles={10}\n                            maxFileSize={10000000}\n                            minFileSize={0}\n                            clickable\n                        >\n                            Upload Album Cover\n                        </Files>\n                      </div>\n                      <div className=\"form-group text-center create-abm-upload\">\n                          <Files\n                              className='files-dropzone album-songs-upload btn btn-primary btn-sm'\n                              // onChange={this.onFilesChange}\n                              // onError={this.onFilesError}\n                              accepts={['audio/*']}\n                              multiple\n                              maxFiles={10}\n                              maxFileSize={10000000}\n                              minFileSize={0}\n                              clickable\n                          >\n                              Upload Songs\n                          </Files>\n                      </div>\n                      <div className=\"btn btn-sm btn-outline-success\" onClick={this.props.createAlbum.bind(this,this.state)}>Create</div>\n                </form>\n            </div>\n            <div className=\"col\">\n                uploaded image and songs will display here\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Card extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          albumsData : [],\n          tracksData : [],\n          isSongsShown : false,\n          favouriteCount : 0,\n          userFavouriteTracks : [],\n          tracksBoolval : [],\n          isUserActive : false\n        }\n    }\n    async componentDidMount(){\n      let user = localStorage.getItem(\"musicHuntUser\");\n      if(user!==undefined && user !== null){\n        let boolval = [];\n        let albumOfUser = await getFavouriteTracksByUser({userName : user}).then(response=>{return response.albumId});\n        if(albumOfUser!==undefined){\n              let userfavouriteAlbumArr = this.props.albumData.slice();\n              let newUserFavouriteAlbum = userfavouriteAlbumArr.map((val)=>{\n                var newObj = Object.assign({},val);\n                let countBool = 0;\n                albumOfUser.forEach(valRes=>{\n                  if(valRes===val.album_id){\n                    countBool++;\n                  }\n                })\n                newObj.isFavourite = countBool>0?true : false;\n                return newObj;\n              })\n              for(let i=0; i<newUserFavouriteAlbum.length; i++){\n                if(newUserFavouriteAlbum[i].isFavourite){\n                  let slicedVal = newUserFavouriteAlbum[i];\n                  newUserFavouriteAlbum.splice(i,1);\n                  newUserFavouriteAlbum.unshift(slicedVal);\n                }\n              }\n              console.log(newUserFavouriteAlbum);\n              console.log(boolval);\n              for(let i=0; i<newUserFavouriteAlbum.length; i++){\n                boolval.push(newUserFavouriteAlbum[i].isFavourite);\n              }\n              this.setState({userFavouriteTracks : newUserFavouriteAlbum, tracksBoolval : boolval, isUserActive : true});\n        }\n        else{\n          let userFavouriteTracks = this.props.albumData.slice();\n          console.log(userFavouriteTracks);\n          this.setState({userFavouriteTracks : userFavouriteTracks, isUserActive : true});\n        }\n      }\n      else{\n        let userFavouriteTracks = this.props.albumData.slice();\n        console.log(userFavouriteTracks);\n        this.setState({userFavouriteTracks : userFavouriteTracks});\n      }\n    }\n\n    setFavouriteFirst(newUserFavouriteAlbum){\n      console.log(newUserFavouriteAlbum);\n        let user = localStorage.getItem(\"musicHuntUser\");\n        if(user!==undefined && user !== null){\n          for(let i=0; i<newUserFavouriteAlbum.length; i++){\n            if(newUserFavouriteAlbum[i].isFavourite){\n              let slicedVal = newUserFavouriteAlbum[i];\n              newUserFavouriteAlbum.splice(i,1);\n              newUserFavouriteAlbum.unshift(slicedVal);\n            }\n          }\n          let boolval = [];\n          for(let i=0; i<newUserFavouriteAlbum.length; i++){\n            boolval.push(newUserFavouriteAlbum[i].isFavourite);\n          }\n          this.setState({tracksBoolval : boolval, userFavouriteTracks : newUserFavouriteAlbum});\n        }\n    }\n\n    getTracks = (index)=>{\n        getAllTracksByAlbumId(this.props.albumData[index].album_id).then(response => {\n              if(response.dataset===undefined){\n                  console.log(\"server unavailable\");\n              }\n              else{\n                this.props.albumTitle(index);\n                this.setState({tracksData : response.dataset,isSongsShown : true});\n              }\n        })\n    }\n\n    setFavour = (index,albumId)=> {\n      let user = localStorage.getItem(\"musicHuntUser\")\n      if(user!==null && user!==undefined){\n          let obj = {\n            userName : user,\n            albumId :albumId\n          }\n          setFavouriteByUser(obj).then(response=> {});\n          let copyOfFavouriteAlbum = this.state.userFavouriteTracks.slice();\n          copyOfFavouriteAlbum[index].isFavourite = true;\n          this.setFavouriteFirst(copyOfFavouriteAlbum);\n      }\n    }\n\n    removeFavour = (index, albumId) => {\n      let user = localStorage.getItem(\"musicHuntUser\")\n      if(user!==null && user!==undefined){\n          let obj = {\n            userName : user,\n            albumId : albumId\n          }\n          removeFavouriteByUser(obj).then(response => {});\n          let copyOfFavouriteAlbum = this.state.userFavouriteTracks.slice();\n          copyOfFavouriteAlbum[index].isFavourite = false;\n          this.setFavouriteFirst(copyOfFavouriteAlbum);\n      }\n    }\n\n    render(){\n      let albumcardStyle = {\n        flexWrap: window.location.href.includes(\"album\") ? \"none\"  :\"nowrap\",\n      }\n        if(this.state.isSongsShown){\n          return (\n            <Songs tracksData = {this.state.tracksData}/>\n          )\n        }\n        else{\n            return(\n                <div className=\"album-card text-center row\" style={albumcardStyle}>\n                 {this.state.userFavouriteTracks.map((val, index)=>{\n                     return(\n                        <div className=\"card col-md-3\" id=\"card\" style={this.props.cardStyle} key={index}>\n                          <div className=\"row\" onClick={this.getTracks.bind(this,index)}>\n                            <img src={val.album_image_file} className=\"card-img-top mx-auto img-thumbnail\" alt=\"...\"/>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\"><b>Title  :</b> {val.album_title}</h5>\n                                <span><b>Tracks : </b>{val.album_tracks}</span>\n                            </div>\n                            </div>\n                            <div className=\"row pull-right card-fa-heart\">\n                            {this.state.isUserActive?\n                              this.state.tracksBoolval[index] ?\n                                <i className=\"fa fa-heart add-favourite\" onClick={this.removeFavour.bind(this,index,val.album_id)} title=\"Remove to favourite\"></i>:\n                                <i className=\"fa fa-heart-o add-favourite\" onClick={this.setFavour.bind(this,index,val.album_id)} title=\"Add to favourite\"></i>\n                              :\"\"\n                            }\n\n                            </div>\n                        </div>\n                     )\n                   })}\n                 </div>\n            )\n        }\n        }\n}\n\nclass Songs extends Component{\n  constructor(props){\n      super();\n      this.state = {\n          songsData : []\n      }\n  }\n  componentDidMount = ()=> {\n    if(this.props.tracksData===undefined){\n\n    }\n    else{\n      this.setState({songsData : this.props.tracksData});\n    }\n  }\n  render(){\n    return(\n      <div className=\"song-content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4>{this.props.title!==undefined ? this.props.title : \"SONGS\"}</h4>\n            </div>\n            <div className=\"col-md-2 mr-auto\">\n              <h5>{this.state.songsData.length} Songs</h5>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"row text-center song-header\">\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n          </div>\n          <div className=\"row\">\n          <div className=\"col-md-3 ml-auto\">\n          {this.props.tracksData[0] !== undefined ?\n              <img src={this.props.tracksData[0].track_image_file} alt=\"Album\" className=\"img-thumbnail\"/>:\"\"\n            }\n          </div>\n            <div className=\"col-md-9\">\n              {this.state.songsData.map((song, index)=>{\n                  return(\n                      <MusicPlayer songData={song} index={index} key={index}/>\n                  )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AllCards extends Component{\n    render(){\n        return(\n            <div className=\"allCards\"></div>\n        )\n    }\n}\n\nclass Favourite extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userFavouriteList : [],\n      userFavouriteTrackList : [],\n      isUserActive : false\n    }\n  }\n  async componentDidMount() {\n    let user = localStorage.getItem(\"musicHuntUser\");\n    let userAlbumList = [];\n    // let tracksList = this.state.userFavouriteTrackList;\n    if(user!==null && user !== undefined){\n        let favouriteTrackUser =  await getFavouriteTracksByUser({userName : user})\n        if(favouriteTrackUser.albumId!==undefined){\n              let trackUserArr = await Promise.all(favouriteTrackUser.albumId.map((value)=>{return value;}));\n              let userfavouriteTrackArr = await Promise.all(trackUserArr.map((value)=>{\n                    let responseArr = getAllTracksByAlbumId(value);\n                    return responseArr;\n              }))\n              let userfavouriteTrackCopy = await Promise.all(userfavouriteTrackArr.map((value)=>{\n                if(value.dataset!==undefined){\n                  let responseArr = value.dataset.map((val)=>{return val;});\n                  return responseArr;\n                }\n              }))\n              if(userfavouriteTrackCopy!==undefined && userfavouriteTrackCopy.length>0){\n                  userfavouriteTrackCopy.forEach((val)=>{\n                    if(val!==undefined){\n                      val.forEach((val1)=>{\n                        userAlbumList.push(val1);\n                      })\n                    }\n                  })\n                  this.setState({userFavouriteList : userAlbumList, isUserActive : true});\n              }\n        }\n    }\n  }\n    render(){\n        return(\n          <div>\n          {this.state.isUserActive ?\n            <div className=\"favourites container-fluid\">\n            <div className=\"row\">\n                <div className=\"mr-auto\">\n                  <h5>Favourites</h5>\n                </div>\n                <div className=\"ml-auto\">\n                  {this.state.userFavouriteList.length} Songs\n                </div>\n            </div>\n            <hr />\n                {this.state.userFavouriteList.map((val, index) => {\n                  return(\n                    <MusicPlayer songData={val} key={index}/>\n                  )\n                })}\n            </div>\n          :\"\"}\n          </div>\n        )\n    }\n}\n\nclass Profile extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      firstName : \"\",\n      lastName : \"\",\n      userName : \"\",\n      email : \"\",\n      password  :\"\",\n      profile_img : \"\",\n      isChanged : true,\n      isPasswordChange : false,\n      currentPassword : \"\",\n      changedPassword : \"\",\n      updatedDetails : {\n        profile_image : \"\",\n        preview_image : \"\",\n        userName : \"\",\n        currentPassword : \"\",\n        changedPassword : \"\"\n      }\n    }\n  }\n\n  componentDidMount = ()=> {\n      let user = localStorage.getItem(\"musicHuntUser\");\n      if(user!==null && user!==undefined){\n        getProfileDetails(user).then(response => {\n          let obj = {\n            firstName : response.firstName,\n            lastName : response.lastName,\n            userName : response.userName,\n            email : response.email,\n            profile_img : localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined ? localStorage.getItem(\"musicHuntUserProfile\") : \"\"\n          }\n            let contentType = 'image/jpg';\n            let b64Data = localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined ?localStorage.getItem(\"musicHuntUserProfile\") : \"\";\n            let blob = b64toBlob(b64Data, contentType);\n            let blobUrl = URL.createObjectURL(blob);\n            this.setState({\n              firstName : obj.firstName,\n              lastName : obj.lastName,\n              userName : obj.userName,\n              email : obj.email,\n              profile_img : blobUrl\n            });\n        })\n      }\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name] : e.target.value, isChanged : false});\n  }\n\n    togglePassword = () => {\n        this.setState({isPasswordChange : true})\n    }\n\n    changeUserDetails = ()=> {\n      let updatedDetails = this.state.updatedDetails;\n      console.log(updatedDetails);\n      let count = 0;\n      if(localStorage.getItem(\"musicHuntUser\")!==this.state.userName){\n          updatedDetails.userName = this.state.userName;\n      }\n      else{\n        updatedDetails.userName = \"\";\n        count++;\n      }\n      if(this.state.isPasswordChange){\n          if(this.state.currentPassword!==\"\" && this.state.currentPassword!==\"\"){\n              if(this.state.currentPassword!==this.state.changedPassword){\n                  updatedDetails.currentPassword = this.state.currentPassword;\n                  updatedDetails.changedPassword = this.state.changedPassword;\n              }\n          }\n          else{\n            console.log(\"Equal\");\n          }\n      }\n      if(count!==2){\n        setProfileDetails(updatedDetails).then(res=>{\n            console.log(res);\n        })\n      }\n\n\n      // if(this.state.isPasswordChange){\n      //     // let currentpass = this.state.currentPassword;\n      //     // let changedpass = this.state.changedPassword;\n      //     let userObj = {\n      //       userName : localStorage.getItem(\"musicHuntUser\")!==\"undefined\"&& localStorage.getItem(\"musicHuntUser\")!==undefined ? localStorage.getItem(\"musicHuntUser\") : this.state.userName,\n      //       changedUsername : this.state.userName,\n      //       changedPassword : this.state.changedPassword,\n      //       email : this.state.email\n      //     }\n      //     setProfileDetails(userObj).then(res => {\n      //       console.log(res);\n      //     })\n      // }\n      // else{\n      //   let userObj = {\n      //     userName : localStorage.getItem(\"musicHuntUser\")!==\"undefined\"&& localStorage.getItem(\"musicHuntUser\")!==undefined ? localStorage.getItem(\"musicHuntUser\") : this.state.userName,\n      //     changedUsername : this.state.userName,\n      //     email : this.state.email\n      //   }\n      //   setProfileDetails(userObj).then(res => {\n      //     console.log(res);\n      //   })\n      // }\n    }\n\n    changeProfileImage = (file)=>{\n      let fileObj = file[file.length-1];\n      image2base64(fileObj.preview.url).then(response => {\n          this.setState({updatedDetails : {\n            ...this.state.updatedDetails,\n            profile_image : response,\n            preview_image : fileObj.preview.url\n          },\n          isChanged : false})\n      })\n    }\n\n    onFilesError = (err)=>{\n      console.log(err);\n    }\n    render(){\n        return(\n            <div className=\"profile container\">\n            <form>\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  {localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==undefined?\n                    <div>\n                      <div className=\"row\">\n                      {this.state.updatedDetails.preview_image!==\"\"?\n                        <img src={this.state.updatedDetails.preview_image} className=\"img-thumbnail profile-image mx-auto\" alt=\"Profile\" />\n                      :\n                        <img src={this.state.profile_img} className=\"img-thumbnail profile-image mx-auto\" alt=\"Profile 1\" />}\n                      </div>\n                      <div className=\"row profile-upload-btn\">\n                      <Files\n                          className='files-dropzone'\n                          onChange={this.changeProfileImage}\n                          onError={this.onFilesError}\n                          accepts={['image/*']}\n                          multiple\n                          maxFiles={10}\n                          maxFileSize={200000}\n                          minFileSize={0}\n                          clickable\n                      >\n                          <div className=\"btn btn-sm btn-primary mx-auto\">Change Image</div>\n                      </Files>\n                      </div>\n                    </div>\n                      :\"\"\n                  }\n                </div>\n                <div className=\"col middle-profile\">\n                    <div className=\"form-group form-inline\">\n                      <label htmlFor=\"firstname\" className=\"mr-auto\" >First Name</label>\n                      <input type=\"text\" className=\"form-control\" id=\"firstname\" name=\"firstName\" onChange={this.onChange.bind(this)} value={this.state.firstName} disabled/>\n                    </div>\n                    <div className=\"form-group form-inline\">\n                      <label htmlFor=\"lastname\" className=\"mr-auto\">Last Name</label>\n                      <input type=\"text\" className=\"form-control\" id=\"lastname\" name=\"lastName\" onChange={this.onChange.bind(this)} value={this.state.lastName} disabled/>\n                    </div>\n                    <div className=\"form-group form-inline\">\n                      <label htmlFor=\"username\" className=\"mr-auto\">User Name</label>\n                      <input type=\"text\" className=\"form-control\" id=\"username\" name=\"userName\" onChange={this.onChange.bind(this)} value={this.state.userName}/>\n                    </div>\n                    <div className=\"form-group form-inline\">\n                      <label htmlFor=\"exampleInputEmail1\" className=\"mr-auto\">Email address</label>\n                      <input type=\"email\" className=\"form-control\" id=\"email\" onChange={this.onChange.bind(this)} value={this.state.email}  placeholder=\"Enter email\" disabled/>\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <div className=\"btn btn-primary\" onClick={this.togglePassword}>Change Password</div>\n                    {this.state.isPasswordChange ?\n                        <div>\n                          <div className=\"form-group form-inline\">\n                            <label htmlFor=\"currentPassword\" className=\"mr-auto\">Current Password</label>\n                            <input type=\"password\" className=\"form-control\" name=\"currentPassword\" onChange={this.onChange.bind(this)} value={this.state.currentPassword}/>\n                          </div>\n                          <div className=\"form-group form-inline\">\n                            <label htmlFor=\"changedPassword\" className=\"mr-auto\">Password</label>\n                            <input type=\"password\" className=\"form-control\" name=\"changedPassword\" onChange={this.onChange.bind(this)} value={this.state.changedPassword}/>\n                          </div>\n                        </div>:\"\"\n                      }\n                </div>\n              </div>\n              <div className=\"row profile-update-btn\">\n                  <input type=\"button\" className=\"btn btn-success mx-auto\" onClick={this.changeUserDetails} disabled={this.state.isChanged} value=\"Save Changes\"/>\n              </div>\n              </form>\n            </div>\n        )\n    }\n}\n\nclass Section extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isUserActive : false,\n            activeLink : \"Home\",\n            albumData : [],\n            searchExist : false,\n            searchKeyWord : \"\",\n            searchErrorText  :\"\",\n            audioLists : [\n            {\n              name : \"First song 1\",\n              singer : \"Madhan\",\n              cover : \"https://freemusicarchive.org/file/images/tracks/Track_-_20110118110252018\",\n              musicSrc :\"http://freemusicarchive.org/music/Broke_For_Free/Directionless_EP/Broke_For_Free_-_Directionless_EP_-_01_Night_Owl/download\"\n            },\n            {\n              name : \"First song\",\n              singer : \"Madhan\",\n              cover : \"https://freemusicarchive.org/file/images/tracks/Track_-_20110118110252018\",\n              musicSrc : () => {\n                return Promise.resolve(\"http://freemusicarchive.org/music/Broke_For_Free/Directionless_EP/Broke_For_Free_-_Directionless_EP_-_01_Night_Owl/download\")\n              }\n            }\n          ]\n        }\n    }\n\n    componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHunt\") !==null){\n        this.setState({isUserActive : true});\n      }\n      console.log(this.props);\n    }\n\n    logout = ()=> {\n      localStorage.clear();\n      this.setState({isUserActive : false});\n    }\n\n    loginUser = ()=> {\n      this.setState({isUserActive : true});\n    }\n\n    toggleActive = (value)=>{\n        this.setState({activeLink : value});\n    }\n\n    setSearchWord = (e)=>{\n      this.setState({[e.target.name]:e.target.value});\n    }\n    async searchAlbum(e){\n          if(this.state.searchKeyWord!==\"\"){\n            console.log(this.state.searchKeyWord);\n              let response =await searchAlbumByTitle(this.state.searchKeyWord);\n              if(response===\"No Albums Found\"){\n                  this.setState({searchErrorText : \"No Search found for \"+this.state.searchKeyWord})\n              }\n              else{\n                  this.setState({albumData : response, searchExist : true, searchErrorText:\"\"})\n              }\n          }\n    }\n    searchOnEnter(e){\n      if(e.keyCode===13){\n        this.searchAlbum();\n      }\n      else if(this.state.searchKeyWord===\"\"){\n        this.setState({searchExist : false,searchErrorText :\"\"});\n      }\n    }\n    render(){\n        return(\n            <div className=\"section container-fluid\">\n                <Router>\n                <div className=\"section-aside\">\n                    <ul>\n                        <Link to=\"/MusicHuntR\">\n                            <li className={\"section-nav-link \" + (this.state.activeLink==='Home'?'active':'')} onClick={this.toggleActive.bind(this,\"Home\")}>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Home</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntR/album\">\n                            <li className={\"section-nav-link \" + (this.state.activeLink==='Albums'?'active':'')} onClick={this.toggleActive.bind(this,\"Albums\")}>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Albums</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntR/favourites\">\n                            <li className={\"section-nav-link \" + (this.state.activeLink==='Favourites'?'active':'')} onClick={this.toggleActive.bind(this,\"Favourites\")}>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Favourites</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                        <Link to=\"/MusicHuntR/profile\">\n                            <li className={\"section-nav-link \" + (this.state.activeLink==='Profile'?'active':'')} onClick={this.toggleActive.bind(this,\"Profile\")}>\n                                <div className=\"row\">\n                                    <div className=\"mr-auto\">Profile</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-user-o\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                        </Link>\n                            <li>\n                                <div className=\"row\" onClick={this.logout}>\n                                    <div className=\"mr-auto\">\n                                    {this.state.isUserActive ?\n                                      <div onClick={this.logout}>Logout</div>:\n                                      <div data-toggle=\"modal\" data-target=\"#myModal\" onClick={this.loginUser}>Login</div>}</div>\n                                    <div className=\"ml-auto\"><i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>\n                                </div>\n                            </li>\n                    </ul>\n                </div>\n                <div className=\"section-content\">\n                    <div className=\"row search-bar\">\n                        <div className=\"input-group col-md-12\">\n                            <input className=\"form-control\" type=\"search\" placeholder=\"Search for Albums\" name=\"searchKeyWord\" onChange={this.setSearchWord.bind(this)} onKeyDown={this.searchOnEnter.bind(this)} />\n                            <div className=\"input-group-append\">\n                            <div className=\"dropdown\">\n                              <button className=\"btn btn-primary\" type=\"button\" onClick={this.searchAlbum.bind(this)}>\n                              <i className=\"fa fa-search\"></i>\n                                  {/*<i className=\"fa fa-angle-down\"></i>\n                                    <ul className=\"dropdown-menu\">\n                                      <li><a href=\"/\">Albums</a></li>\n                                      <li><a href=\"/\">Tracks</a></li>\n                                    </ul>*/}\n                              </button>\n                              </div>\n                              </div>\n                        </div>\n                        {this.state.searchErrorText!==\"\"?\n                        <div className=\"search-error-text\">{this.state.searchErrorText}</div>:\"\"\n                      }\n                    </div>\n                    <div className=\"section-content-album\">\n                    {this.state.searchExist?\n                      <Album albumData={this.state.albumData} title=\"Albums\"/>:\n\n                      <Switch>\n                          <Redirect exact from=\"/\" to=\"/MusicHuntR\"/>\n                          <Route exact path=\"/MusicHuntR\" render={()=><Home/>}/>\n                          <Route exact path=\"/MusicHuntR/album\" render = {()=><Album title=\"Albums\"/>}/>\n                          <Route exact path=\"/MusicHuntR/song\" render = {()=><Songs/>}/>\n                          <Route path=\"/MusicHuntR/allcards\" render={()=><AllCards/>}/>\n                          <Route exact path=\"/MusicHuntR/favourites\" render = {()=><Favourite />}/>\n                          <Route exact path=\"/MusicHuntR/profile\" render = {()=><Profile />}/>\n                      </Switch>\n                  }\n                    </div>\n                </div>\n                </Router>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    }\n  }\n}\nconnect(mapStateToProps,mapDispatchToProps)(Section);\nexport default Section;\n","import React , { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './App.css';\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\nimport MainContent from './Main/MainContent';\nimport Section from './Components/Section/Section';\nimport b64toBlob from 'b64-to-blob';\nimport { connect } from 'react-redux';\nimport {\n    BrowserRouter as Router\n  } from 'react-router-dom';\n\nimport logo from './Images/logo.png';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isUserActive : false,\n      userName : \"\",\n      audioLists : [],\n      autoPlay : false,\n      profile_img : \"\"\n    }\n  }\n\n  componentDidMount = ()=> {\n      if(localStorage.getItem(\"musicHuntuser\")!==undefined && localStorage.getItem(\"musicHuntUser\")!==null){\n        let contentType = 'image/jpg';\n        let b64Data = localStorage.getItem(\"musicHuntUserProfile\");\n        if(localStorage.getItem(\"musicHuntUserProfile\")!==\"undefined\" && localStorage.getItem(\"musicHuntUserProfile\")!==null){\n          let blob = b64toBlob(b64Data, contentType);\n          let blobUrl = URL.createObjectURL(blob);\n          this.setState({isUserActive : true, userName : localStorage.getItem(\"musicHuntUser\"), profile_img :blobUrl});\n        }\n        this.setState({isUserActive : true});\n      }\n      toast.configure({\n        autoClose: 1000,\n      });\n      console.log(this.props.musicPlayListReducer.audioLists);\n  }\n\n  alertToSignIn = ()=>{\n    toast.success(\"Login to set your favourite tracks\", {\n        position: toast.POSITION.TOP_RIGHT\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <ToastContainer autoClose={1500}/>\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\n          <img src={logo} alt=\"Music Hunt\" className=\"nav-img\"/>\n          <a className=\"navbar-brand\" href=\"/\"><h3>Music Hunt</h3></a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          {this.state.isUserActive}\n          {this.state.isUserActive  ?\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">\n                {this.state.profile_img===\"\" ?\n                  <span className=\"fa fa-user-circle-o\"></span>:\n                  <img src={this.state.profile_img} className=\"navbar-image\" alt=\"profile\"/>\n               }\n                </a>\n              </li>\n            </ul>:<div></div>}\n          </div>\n        </nav>\n        <div className=\"section-content-main\">\n          <Section/>\n          <Router>\n            <MainContent/>\n          </Router>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n          {console.log(this.props.musicPlayListReducer.isSongs)}\n          { this.props.musicPlayListReducer.audioLists.length >0 || this.props.musicPlayListReducer.songsList.length >0?\n              this.props.musicPlayListReducer.isSongs ?\n                  <ReactJkMusicPlayer panelTitle=\"Songs\"\n                                      audioLists={this.props.musicPlayListReducer.songsList}\n                                      defaultPosition={{top:600,left:100}}\n                                      draggable={true}\n                                      bounds= \"\"\n                                      autoPlay={true}/>:\n              <ReactJkMusicPlayer audioLists={this.props.musicPlayListReducer.audioLists} defaultPosition={{top:600,left:100}} draggable={true} bounds= \"\" autoPlay={false}/>:\"\"\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    musicPlayListReducer : state.musicPlayListReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrent : (val) => {\n      dispatch({\n          type : 'SET_CURRENT',\n          payload : val\n      });\n    },\n    setPlayList : (playList) => {\n      dispatch({\n        type : 'SET_PLAYLIST',\n        payload : playList\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore , combineReducers, applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\n\nconst musicPlayListReducer = (state={\n  audioLists : [],\n  currentPlaying : 0,\n  lastPlayed : 0,\n  defaultPlayIndex : 0,\n  songsList : [],\n  playIndex : 0,\n  isUserActive : false,\n  isSongs : false\n}, action) => {\n    switch(action.type){\n        case 'SET_CURRENT':\n          state = {\n            ...state,\n            currentPlaying : action.payload\n          }\n          break;\n        case 'SET_PLAYLIST':\n          state = {\n            ...state,\n            audioLists : [...state.audioLists,action.payload],\n            isSongs : false\n          }\n          break;\n        case 'SET_LAST_PLAYED':\n          state = {\n            ...state,\n            lastPlayed : action.payload\n          }\n          break;\n        case 'SET_SONGSLIST':\n          state = {\n            ...state,\n            songsList : [{...action.payload}],\n            isSongs : true\n          }\n          break;\n        case 'SET_USER_ACTIVE':\n          state = {\n            ...state,\n            isSongs : action.payload\n          }\n         break;\n        default :\n          state  = {\n            ...state            \n          }\n          break;\n    }\n    return state;\n}\n\n\nconst myLogger = (state) => (next) => (action) => {\n  console.log(\"Logged Action\", action);\n  next(action);\n}\nconst store = createStore(combineReducers({musicPlayListReducer}), {}, applyMiddleware(myLogger));\n\nstore.subscribe(() => {\n  console.log(\"Updated Store\" , store.getState());\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}